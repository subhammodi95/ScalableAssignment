worker_processes 1;

events {
    worker_connections 1024;
}

http {
    # Define a rate limiting zone: 10MB shared memory, 5 requests per second per IP
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=5r/s;

    server {
        listen 80;

        # Health check endpoint
        location /healthz {
            return 200 'OK';
            add_header Content-Type text/plain;
        }

        # Rate limited API proxying for user-service
        location /api/users/ {
            limit_req zone=api_limit burst=10 nodelay;
            proxy_pass http://user-service:5001/;
            rewrite ^/api/users/(.*)$ /$1 break;
        }

        # Rate limited API proxying for course-service
        location /api/courses/ {
            limit_req zone=api_limit burst=10 nodelay;
            proxy_pass http://course-service:5002/;
            rewrite ^/api/courses/(.*)$ /$1 break;
        }

        # location /api/courses/apidocs/ {
        #     proxy_pass http://course-service:5002/apidocs/;  # Removing the "/api/courses/apidocs/" part
        #     rewrite ^/api/courses/apidocs/(.*)$ /$1 break;
        # }

        # Rate limited API proxying for enrollment-service
        location /api/enrollments/ {
            limit_req zone=api_limit burst=10 nodelay;
            proxy_pass http://enrollment-service:5003/;
            rewrite ^/api/enrollments/(.*)$ /$1 break;
        }

        # Rate limited API proxying for enrollment-service
        location /api/certificates/ {
            limit_req zone=api_limit burst=10 nodelay;
            proxy_pass http://certificate_service:5004/;
            rewrite ^/api/certificates/(.*)$ /$1 break;
        }

        # Rate limited API proxying for enrollment-service
        location /api/analytics/ {
            limit_req zone=api_limit burst=10 nodelay;
            proxy_pass http://analytics_service:5005/;
            rewrite ^/api/analytics/(.*)$ /$1 break;
        }

        # Rate limited API proxying for enrollment-service
        location /api/feedback/ {
            limit_req zone=api_limit burst=10 nodelay;
            proxy_pass http://feedback_service:5006/;
            rewrite ^/api/feedback/(.*)$ /$1 break;
        }

        # Default fallback
        location / {
            return 404 'Invalid Endpoint';
        }
    }
}
